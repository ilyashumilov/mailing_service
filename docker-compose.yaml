version: "3.7"

services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data/
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432
    restart: on-failure
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_NAME} -U $${POSTGRES_USER}" ]
  api:
    build: .
    command: >
      sh -c "python project/manage.py migrate &&
             python project/manage.py runserver 0.0.0.0:8000"
#    volumes:
#      - ./project/report:/app/project/report

    restart: on-failure
    ports:
      - 8000:8000
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy

  sender:
    build: .
    command: python project/manage.py sender
#      sh -c "python project/manage.py sender"
    #    volumes:
    #      - ./project/report:/app/project/report

    restart: always

    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:alpine

  celery:
    restart: always
    build:
      context: .
    command: sh -c "cd mail_sender/main &&
             python -m celery -A main worker"
    depends_on:
      - redis
